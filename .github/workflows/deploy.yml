name: Build and Deploy to Server

on:
  push:
    branches:
      - main

jobs:
  build-and-uat:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Type check
        run: npm run typecheck

      - name: Build app
        run: npm run build
        env:
          VITE_GOOGLE_CLIENT_ID: ${{ secrets.VITE_GOOGLE_CLIENT_ID }}
          VITE_GOOGLE_API_KEY: ${{ secrets.VITE_GOOGLE_API_KEY }}

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H 192.168.1.244 >> ~/.ssh/known_hosts

      - name: Deploy to UAT
        run: |
          echo "Deploying to UAT environment..."
          ssh beny@192.168.1.244 "rm -rf /home/beny/gtask-uat/*"
          ssh beny@192.168.1.244 "mkdir -p /home/beny/gtask-uat"
          
          # Copy necessary files for running the preview server
          scp package.json beny@192.168.1.244:/home/beny/gtask-uat/
          scp package-lock.json beny@192.168.1.244:/home/beny/gtask-uat/
          scp -r dist beny@192.168.1.244:/home/beny/gtask-uat/
          
          echo "Installing dependencies on UAT server..."
          ssh beny@192.168.1.244 "cd /home/beny/gtask-uat && npm ci"
          
          echo "Starting UAT server..."
          # Kill any existing process on port 3001
          ssh beny@192.168.1.244 "lsof -ti:3001 | xargs kill -9 2>/dev/null || true"
          
          # Start the server and verify it's running
          ssh beny@192.168.1.244 "cd /home/beny/gtask-uat && nohup npm run preview -- --host 0.0.0.0 --port 3001 > /dev/null 2>&1 &"
          
          # Wait a bit for the server to start
          sleep 5
          
          # Verify the server is running
          if curl -s http://192.168.1.244:3001 > /dev/null; then
            echo "UAT server is running successfully!"
          else
            echo "UAT server failed to start!"
            exit 1
          fi
          
          echo "UAT deployment complete! Please verify at http://192.168.1.244:3001"

  wait-for-approval:
    needs: build-and-uat
    runs-on: self-hosted
    steps:
      - name: Wait for manual approval
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.token }}
          approvers: beny
          minimum-approvals: 1

  deploy-to-production:
    needs: wait-for-approval
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Build app
        run: npm run build
        env:
          VITE_GOOGLE_CLIENT_ID: ${{ secrets.VITE_GOOGLE_CLIENT_ID }}
          VITE_GOOGLE_API_KEY: ${{ secrets.VITE_GOOGLE_API_KEY }}

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H 192.168.1.244 >> ~/.ssh/known_hosts

      - name: Deploy to Production
        run: |
          echo "Copying files to production server..."
          ssh beny@192.168.1.244 "rm -rf /home/beny/gtask/*"
          ssh beny@192.168.1.244 "mkdir -p /home/beny/gtask"
          
          # Copy necessary files for running the preview server
          scp package.json beny@192.168.1.244:/home/beny/gtask/
          scp package-lock.json beny@192.168.1.244:/home/beny/gtask/
          scp -r dist beny@192.168.1.244:/home/beny/gtask/
          
          echo "Installing dependencies on production server..."
          ssh beny@192.168.1.244 "cd /home/beny/gtask && npm ci"
          
          echo "Starting production server..."
          # Kill any existing process on port 3000
          ssh beny@192.168.1.244 "lsof -ti:3000 | xargs kill -9 2>/dev/null || true"
          
          # Start the server and verify it's running
          ssh beny@192.168.1.244 "cd /home/beny/gtask && nohup npm run preview -- --host 0.0.0.0 --port 3000 > /dev/null 2>&1 &"
          
          # Wait a bit for the server to start
          sleep 5
          
          # Verify the server is running
          if curl -s http://192.168.1.244:3000 > /dev/null; then
            echo "Production server is running successfully!"
          else
            echo "Production server failed to start!"
            exit 1
          fi
          
          echo "Production deployment complete!" 